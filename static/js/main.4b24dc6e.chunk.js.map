{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/index.js","components/ContactForm/ContactForm.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/index.js","components/Filter/Filter.jsx","redux/action.js","App.js","redux/store.js","index.js"],"names":["module","exports","ContactForm","props","submitHandler","initialState","name","number","useState","state","setState","changeHandler","event","currentTarget","value","preventDefault","className","style","contact_form","onSubmit","htmlFor","type","onChange","ContactList","contacts","deleteContact","console","log","contact_list","map","contact","onClick","id","Filter","changeFilterHandler","filter","addContact","createAction","filterContact","connect","dispatch","onAddContact","actions","onDeleteContact","onFilterContact","wraper","container","dev","data","undefined","find","uuidv4","alert","target","filterLowerCase","toLowerCase","includes","contactFilter","lsKey","readState","localStorage","getItem","JSON","parse","initialstate","contactsReducer","createReducer","payload","setItem","stringify","filterConttact","filterReducer","_","action","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b24dc6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"App_wraper__36cdE\",\"container\":\"App_container__2MXX0\",\"dev\":\"App_dev__si7hd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__1jEzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2MMCN\"};","import ContactForm from './ContactForm';\r\nexport default ContactForm;\r\n","import React, { useState } from 'react';\r\nimport style from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactForm = props => {\r\n  const { submitHandler } = props;\r\n  const initialState = { name: '', number: '' };\r\n  const [state, setState] = useState(initialState);\r\n  const changeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    event.preventDefault();\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <form\r\n      className={style.contact_form}\r\n      onSubmit={event => {\r\n        submitHandler(event, state);\r\n        setState(initialState);\r\n      }}\r\n    >\r\n      <label htmlFor=\"name\">\r\n        Name\r\n        <input type=\"text\" name=\"name\" onChange={changeHandler} value={name} />\r\n      </label>\r\n      <label htmlFor=\"number\">\r\n        Number\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          onChange={changeHandler}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button type=\"sumbit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  submitHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import ContactList from './ContactList';\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = props => {\r\n  const { contacts, deleteContact } = props;\r\n  console.log(contacts);\r\n  return (\r\n    <>\r\n      <ul className={style.contact_list}>\r\n        {contacts.map(contact => (\r\n          <li key={contact.id}>\r\n            {contact.name}, {contact.number}{' '}\r\n            <button\r\n              onClick={() => {\r\n                deleteContact(contact.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import Filter from './Filter';\r\nexport default Filter;\r\n","import React from 'react';\r\nimport style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Filter = props => {\r\n  const { changeFilterHandler, filter } = props;\r\n  return (\r\n    <div className={style.filter}>\r\n      <h2>Find contacts by name</h2>\r\n      <input type=\"text\" onChange={changeFilterHandler} value={filter} />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  changeFilterHandler: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\nexport default Filter;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = value => ({\r\n//   type: 'Phonebook/Addcontact',\r\n//   payload: value,\r\n// });\r\n// export const deleteContact = value => ({\r\n//   type: 'Phonebook/Deletecontact',\r\n//   payload: value,\r\n// });\r\n// export const filterContact = value => ({\r\n//   type: 'Phonebook/Filtercontact',\r\n//   payload: value,\r\n// });\r\nexport const addContact = createAction('Phonebook/Addcontact');\r\nexport const deleteContact = createAction('Phonebook/Deletecontact');\r\nexport const filterContact = createAction('Phonebook/Filtercontact');\r\n","import React, { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport style from './App.module.css';\nimport * as actions from './redux/action';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\n\nconst App = ({\n  contacts,\n  filter,\n  onDeleteContact,\n  onAddContact,\n  onFilterContact,\n}) => {\n  // const [state, setState] = useState({\n  //   contacts: [\n  //     // {\n  //     //   id: '6938676d-ae1b-4103-8945-2aaabeb860c7',\n  //     //   name: 'Rosie Simpson',\n  //     //   number: '459-12-56',\n  //     // },\n  //     // {\n  //     //   id: '2266ef36-0fe5-4738-b871-a8b9bc20dee2',\n  //     //   name: 'Hermione Kline',\n  //     //   number: '443-89-12',\n  //     // },\n  //     // {\n  //     //   id: 'aed84b61-e30b-47ee-93e9-3a15f0ad60e4',\n  //     //   name: 'Eden Clements',\n  //     //   number: '645-17-79',\n  //     // },\n  //     // {\n  //     //   id: '42082e5d-fb53-4bcd-b37f-baf857e98944',\n  //     //   name: 'Annie Copeland',\n  //     //   number: '227-91-26',\n  //     // },\n  //   ],\n  //   filter: '',\n  // });\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(lsKey)) {\n  //     setState({ ...state, contacts: JSON.parse(localStorage.getItem(lsKey)) });\n  //   }\n  // }, []);\n\n  // const lsKey = 'contacts';\n\n  const changeFilterHandler = event => {\n    const { value } = event.target;\n    onFilterContact(value);\n    // setState({\n    //   ...state,\n    //   filter: value,\n    // });\n  };\n\n  const submitHandler = (event, data) => {\n    event.preventDefault();\n    if (contacts.find(contact => contact.name === data.name) === undefined) {\n      // console.log(data);\n      // const newContacts = [...state.contacts];\n      // newContacts.push({ id: 'id-5', ...data });\n      // console.log(newContacts);\n      // const newContacts = [...state.contacts, { id: uuidv4(), ...data }];\n      // setState({\n      //   ...state,\n      //   contacts: newContacts,\n      // });\n      onAddContact({ id: uuidv4(), ...data });\n    } else {\n      alert(`${data.name} is already in contacts.`);\n    }\n  };\n  const deleteContact = id => {\n    // const { contacts } = state;\n    // const newContacts = contacts.filter(contact => contact.id !== id);\n    // setState({\n    //   ...state,\n    //   contacts: newContacts,\n    // });\n    // localStorage.setItem(lsKey, JSON.stringify(newContacts));\n    onDeleteContact(id);\n  };\n  const contactFilter = () => {\n    // const { contacts, filter } = state;\n    if (filter === '') {\n      return contacts;\n    }\n    const filterLowerCase = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowerCase),\n    );\n  };\n  // contactFilter();\n  return (\n    <div className={style.wraper}>\n      <div className={style.container}>\n        <div className={style.dev}>\n          <h1>Phonebook</h1>\n          <ContactForm submitHandler={submitHandler} />\n          <h2>Contacts</h2>\n          <Filter changeFilterHandler={changeFilterHandler} filter={filter} />\n          <ContactList\n            contacts={contactFilter()}\n            deleteContact={deleteContact}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: value => dispatch(actions.addContact(value)),\n    onDeleteContact: value => dispatch(actions.deleteContact(value)),\n    onFilterContact: value => dispatch(actions.filterContact(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// import { createStore } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContact } from './action';\r\n\r\nconst lsKey = 'contacts';\r\nconst initialstate = () => {\r\n  let contacts = [];\r\n  if (localStorage.getItem(lsKey)) {\r\n    contacts = JSON.parse(localStorage.getItem(lsKey));\r\n  }\r\n  return {\r\n    contacts: contacts,\r\n    filter: '',\r\n  };\r\n};\r\nconst readState = initialstate();\r\n// const contactsReducer = (state = readState.contacts, { type, payload }) => {\r\n//   //const { contacts } = state;\r\n//   switch (type) {\r\n//     // case 'Phonebook/Addcontact':\r\n//     //   localStorage.setItem(lsKey, JSON.stringify([...state, payload]));\r\n//     //   return {\r\n//     //     contacts: [...state, payload],\r\n//     //   };\r\n//     // case 'Phonebook/Deletecontact':\r\n//     //   const filterConttact = state.filter(contact => contact.id !== payload);\r\n//     //   localStorage.setItem(lsKey, JSON.stringify(filterConttact));\r\n//     //   return {\r\n//     //     contacts: filterConttact,\r\n//     //   };\r\n//     case 'Phonebook/Addcontact':\r\n//       localStorage.setItem(lsKey, JSON.stringify([...state, payload]));\r\n//       return [...state, payload];\r\n//     case 'Phonebook/Deletecontact':\r\n//       const filterConttact = state.filter(contact => contact.id !== payload);\r\n//       localStorage.setItem(lsKey, JSON.stringify(filterConttact));\r\n//       return filterConttact;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsReducer = (state = readState.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'Phonebook/Addcontact':\r\n//       localStorage.setItem(lsKey, JSON.stringify([...state, payload]));\r\n//       return [...state, payload];\r\n//     case 'Phonebook/Deletecontact':\r\n//       const filterConttact = state.filter(contact => contact.id !== payload);\r\n//       localStorage.setItem(lsKey, JSON.stringify(filterConttact));\r\n//       return filterConttact;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst addContactFormState = (state, { payload }) => {\r\n  localStorage.setItem(lsKey, JSON.stringify([...state, payload]));\r\n  return [...state, payload];\r\n};\r\nconst deleteContactFormState = (state, { payload }) => {\r\n  const filterConttact = state.filter(contact => contact.id !== payload);\r\n  localStorage.setItem(lsKey, JSON.stringify(filterConttact));\r\n  return filterConttact;\r\n};\r\nconst contactsReducer = createReducer(readState.contacts, {\r\n  [addContact]: addContactFormState,\r\n  [deleteContact]: deleteContactFormState,\r\n});\r\n\r\n// const filterReducer = (state = readState.filter, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'Phonebook/Filtercontact':\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer(readState.filter, {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\n// const store = createStore(reducer);\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n  console.log(store),\n);\n"],"sourceRoot":""}